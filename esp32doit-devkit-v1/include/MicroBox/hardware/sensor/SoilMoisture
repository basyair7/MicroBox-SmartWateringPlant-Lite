/**
 *  @file SoilMoisture
 *  @version 1.0.0
 *  @author basyair7
 *  @date 2025
 * 
 *  @copyright
 *  Copyright (C) 2025, basyair7
 * 
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 * 
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 * 
 *  You should have received a copy of the GNU General Public License
 *  along with this program. If not, see <https://www.gnu.org/licenses/>
*/

#pragma once

#include <Arduino.h>

class SoilMoisture {
    uint8_t _pinIN;
    bool _CHECK_BEGIN = false;

    public:
        static int VALUE;
        int value;

    public:
        void begin(const uint8_t pinIn) {
            this->_pinIN = pinIn;
            this->_CHECK_BEGIN = true;
            pinMode(pinIn, INPUT);
        }

        void getData(bool mapping = true, uint32_t map_min = 0, uint32_t map_max = 4095)
        {
            if (!this->_CHECK_BEGIN) {
                Serial.println(F("Error: Soil Moisture not initialize! Call begin() first"));
                this->value = -1;
                return;
            }

            int raw_result = analogRead(this->_pinIN);
            this->value = mapping ? map(raw_result, map_min, map_max, 0, 100) : raw_result;
        }

    public:
        static SoilMoisture &instance() {
            static SoilMoisture instance;
            return instance;
        }

        static void BEGIN(const uint8_t pinIn) {
            instance().begin(pinIn);    
        }

        static void GETDATA(bool mapping = true, uint32_t map_min = 0, uint32_t map_max = 4095)
        {
            instance().getData(mapping, map_min, map_max);
        }
};